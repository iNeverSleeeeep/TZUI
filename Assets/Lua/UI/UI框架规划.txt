实现目标：
1. 开发者使用最少的代码实现一个页面的逻辑，不关注底层实现，不关注通用逻辑。
2. 统一的代码，一件事情只有一种方法实现，不做多余扩展和配置。
3. 兼容方便，后续修改可以通过代码重新生成来替换。
4. 性能好，打开页面较快，子界面延迟加载并且开发者无感知。
5. 方便每个人进行组件扩展和代码生成。
6. 组件尽量池化。
7. 方便UI移动位置，不同表现UI方便重用逻辑。
8. 极其简单且明确的生命周期。
9. 红点系统的规划。
10. 制作/修改UI全程无需重启游戏
11. 局部刷新。


UI制作者要处理的事情：
1. 事件。
2. 显示刷新。
3. 显隐切换。

lua代码生成实现的功能：
组件/事件绑定。
生命周期。
资源加载。

代码结构：
Generated/
  XXXPanel.lua  生命周期 资源 View关系
  YYYView.lua  页面生命周期
Private/
  XXXConfig.lua 只写配置不写逻辑，用于初始化各级Widget
  YYYView.lua 页面逻辑 事件 刷新显示
XXXPanelCtrl.lua 对外接口逻辑 逻辑事件注册
XXXDataBridge.lua 不保存数据，只做数据接口

UI预制件结构：
XXXPanel.prefab
Output/
  XXXPanel.prefab
  XXXView.prefab

通用组件：
1. 资产条
2. 退出按钮
3. 列表
4. 消耗
5. 掉落
6. tips
